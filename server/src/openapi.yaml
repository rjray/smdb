openapi: 3.0.3
info:
  title: SMDB Server API
  version: "0.1.0"
servers:
  - url: /api
components:
  parameters:
    authorsAliasesParam:
      name: aliases
      in: query
      description: Boolean, whether to include aliases in an author query
      required: false
      schema:
        type: boolean
    idParam:
      name: id
      in: path
      description: Entity ID
      required: true
      schema:
        $ref: "#/components/schemas/idType"
    magazineIssueMagazineParam:
      name: magazine
      in: query
      description: Boolean, whether to include magazine data with magazine
        issues
      required: false
      schema:
        type: boolean
    magazineIssuesParam:
      name: issues
      in: query
      description: Boolean, whether to include issues data with magazines
      required: false
      schema:
        type: boolean
    magazineIssueCountParam:
      name: issueCount
      in: query
      description: Boolean, whether to include issue counts with magazines
      required: false
      schema:
        type: boolean
    publisherSeriesParam:
      name: series
      in: query
      description: Boolean, whether to include series data with publishers
      required: false
      schema:
        type: boolean
    referencesParam:
      name: references
      in: query
      description: Boolean, whether to include references in a query
      required: false
      schema:
        type: boolean
    referenceCountParam:
      name: referenceCount
      in: query
      description: Boolean, whether to include reference count in a query
      required: false
      schema:
        type: boolean
    seriesPublisherParam:
      name: publisher
      in: query
      description: Boolean, whether to include publisher data with series
      required: false
      schema:
        type: boolean
  schemas:
    idType:
      type: integer
      format: int64
      minimum: 1
    nullableIdType:
      type: integer
      format: int64
      minimum: 1
      nullable: true
    countType:
      type: integer
      format: int64
      minimum: 0
    dateTimeType:
      type: string
      format: date-time
    magazineIssueNumberType:
      type: string
    nullableStringType:
      type: string
      nullable: true
    newAuthorAliasType:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    authorAliasType:
      allOf:
        - $ref: "#/components/schemas/newAuthorAliasType"
        - type: object
          required:
            - id
          properties:
            id:
              $ref: "#/components/schemas/idType"
    newAuthorType:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        aliases:
          type: array
          items:
            $ref: "#/components/schemas/newAuthorAliasType"
    selectedAuthorType:
      type: object
      required:
        - name
      properties:
        id:
          $ref: "#/components/schemas/idType"
        name:
          type: string
    authorType:
      type: object
      required:
        - id
        - name
        - createdAt
        - updatedAt
      properties:
        id:
          $ref: "#/components/schemas/idType"
        name:
          type: string
        createdAt:
          $ref: "#/components/schemas/dateTimeType"
        updatedAt:
          $ref: "#/components/schemas/dateTimeType"
        aliases:
          type: array
          items:
            $ref: "#/components/schemas/authorAliasType"
        referenceCount:
          $ref: "#/components/schemas/countType"
        references:
          type: array
          items:
            $ref: "#/components/schemas/referenceType"
    errorObjectType:
      type: object
      required:
        - summary
        - description
      properties:
        code:
          $ref: "#/components/schemas/idType"
        summary:
          type: string
        description:
          type: string
        reference:
          type: string
    newFeatureTagType:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        description:
          $ref: "#/components/schemas/nullableStringType"
    featureTagType:
      allOf:
        - type: object
          required:
            - id
          properties:
            id:
              $ref: "#/components/schemas/idType"
            referenceCount:
              $ref: "#/components/schemas/countType"
        - $ref: "#/components/schemas/newFeatureTagType"
    newMagazineType:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        language:
          $ref: "#/components/schemas/nullableStringType"
        aliases:
          $ref: "#/components/schemas/nullableStringType"
        notes:
          $ref: "#/components/schemas/nullableStringType"
    magazineType:
      allOf:
        - type: object
          required:
            - id
            - createdAt
            - updatedAt
          properties:
            id:
              $ref: "#/components/schemas/idType"
            createdAt:
              $ref: "#/components/schemas/dateTimeType"
            updatedAt:
              $ref: "#/components/schemas/dateTimeType"
        - $ref: "#/components/schemas/newMagazineType"
    newMagazineFeatureType:
      type: object
      required:
        - referenceId
        - magazineIssueId
      properties:
        referenceId:
          $ref: "#/components/schemas/idType"
        magazineIssueId:
          $ref: "#/components/schemas/idType"
    magazineFeatureType:
      type: object
      required:
        - referenceId
        - magazineIssueId
      properties:
        referenceId:
          $ref: "#/components/schemas/idType"
        magazineIssueId:
          $ref: "#/components/schemas/idType"
        reference:
          $ref: "#/components/schemas/referenceType"
        magazineIssue:
          $ref: "#/components/schemas/magazineIssueType"
        featureTags:
          type: array
          items:
            $ref: "#/components/schemas/featureTagType"
    newMagazineIssueType:
      type: object
      required:
        - issue
        - magazineId
      properties:
        issue:
          $ref: "#/components/schemas/magazineIssueNumberType"
        magazineId:
          $ref: "#/components/schemas/idType"
    magazineIssueType:
      type: object
      required:
        - id
        - issue
        - magazineId
        - createdAt
        - updatedAt
      properties:
        id:
          $ref: "#/components/schemas/idType"
        issue:
          $ref: "#/components/schemas/magazineIssueNumberType"
        magazineId:
          $ref: "#/components/schemas/idType"
        createdAt:
          $ref: "#/components/schemas/dateTimeType"
        updatedAt:
          $ref: "#/components/schemas/dateTimeType"
        magazine:
          $ref: "#/components/schemas/magazineType"
        magazineFeatures:
          type: array
          items:
            $ref: "#/components/schemas/magazineFeatureType"
    newPublisherType:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        notes:
          $ref: "#/components/schemas/nullableStringType"
    publisherType:
      type: object
      nullable: true
      required:
        - id
        - name
      properties:
        id:
          $ref: "#/components/schemas/idType"
        name:
          type: string
        notes:
          $ref: "#/components/schemas/nullableStringType"
        references:
          type: array
          items:
            $ref: "#/components/schemas/referenceType"
        series:
          type: array
          items:
            $ref: "#/components/schemas/seriesType"
    newReferenceType:
      type: object
      required:
        - name
        - ReferenceTypeId
        - tags
      properties:
        name:
          type: string
        isbn:
          $ref: "#/components/schemas/nullableStringType"
        language:
          $ref: "#/components/schemas/nullableStringType"
        referenceTypeId:
          $ref: "#/components/schemas/idType"
        magazineIssueId:
          $ref: "#/components/schemas/idType"
        magazineIssueNumber:
          $ref: "#/components/schemas/magazineIssueNumberType"
        magazineId:
          $ref: "#/components/schemas/idType"
        photosLocation:
          type: string
        photosMedia:
          type: string
        authors:
          type: array
          items:
            $ref: "#/components/schemas/selectedAuthorType"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/tagType"
    updateReferenceType:
      allOf:
        - type: object
          required:
            - id
          properties:
            id:
              $ref: "#/components/schemas/idType"
        - $ref: "#/components/schemas/newReferenceType"
    referenceCoreElements:
      type: object
      required:
        - id
        - name
        - referenceTypeId
        - referenceType
        - createdAt
        - updatedAt
        - authors
        - tags
      properties:
        id:
          $ref: "#/components/schemas/idType"
        name:
          type: string
        language:
          $ref: "#/components/schemas/nullableStringType"
        referenceTypeId:
          $ref: "#/components/schemas/idType"
        referenceType:
          $ref: "#/components/schemas/referenceTypeType"
        createdAt:
          $ref: "#/components/schemas/dateTimeType"
        updatedAt:
          $ref: "#/components/schemas/dateTimeType"
        authors:
          type: array
          items:
            $ref: "#/components/schemas/authorType"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/tagType"
    referenceBookElements:
      type: object
      required:
        - book
      properties:
        book:
          type: object
          required:
            - referenceId
            - isbn
            - seriesNumber
          properties:
            referenceId:
              $ref: "#/components/schemas/idType"
            isbn:
              $ref: "#/components/schemas/nullableStringType"
            seriesNumber:
              $ref: "#/components/schemas/nullableStringType"
            publisherId:
              $ref: "#/components/schemas/nullableIdType"
            publisher:
              $ref: "#/components/schemas/publisherType"
            seriesId:
              $ref: "#/components/schemas/nullableIdType"
            series:
              $ref: "#/components/schemas/seriesType"
    referenceBookType:
      allOf:
        - $ref: "#/components/schemas/referenceCoreElements"
        - $ref: "#/components/schemas/referenceBookElements"
    referenceMagazineFeatureElements:
      type: object
      required:
        - magazineFeature
      properties:
        magazineFeature:
          type: object
          required:
            - referenceId
            - magazineIssueId
          properties:
            referenceId:
              $ref: "#/components/schemas/idType"
            magazineIssueId:
              $ref: "#/components/schemas/idType"
            reference:
              $ref: "#/components/schemas/referenceType"
            magazineIssue:
              $ref: "#/components/schemas/magazineIssueType"
            featureTags:
              type: array
              items:
                $ref: "#/components/schemas/featureTagType"
    referenceMagazineFeatureType:
      allOf:
        - $ref: "#/components/schemas/referenceCoreElements"
        - $ref: "#/components/schemas/referenceMagazineFeatureElements"
    referencePhotoCollectionElements:
      type: object
      required:
        - photoCollection
      properties:
        photoCollection:
          type: object
          required:
            - referenceId
            - location
            - media
          properties:
            referenceId:
              $ref: "#/components/schemas/idType"
            reference:
              $ref: "#/components/schemas/referenceType"
            location:
              type: string
            media:
              type: string
    referencePhotoCollectionType:
      allOf:
        - $ref: "#/components/schemas/referenceCoreElements"
        - $ref: "#/components/schemas/referencePhotoCollectionElements"
    referenceType:
      oneOf:
        - $ref: "#/components/schemas/referenceBookType"
        - $ref: "#/components/schemas/referenceMagazineFeatureType"
        - $ref: "#/components/schemas/referencePhotoCollectionType"
    newReferenceTypeType:
      type: object
      required:
        - name
        - description
      properties:
        name:
          type: string
        description:
          type: string
        notes:
          $ref: "#/components/schemas/nullableStringType"
    referenceTypeType:
      allOf:
        - type: object
          required:
            - id
          properties:
            id:
              $ref: "#/components/schemas/idType"
            referenceCount:
              $ref: "#/components/schemas/countType"
            references:
              type: array
              items:
                $ref: "#/components/schemas/referenceType"
        - $ref: "#/components/schemas/newReferenceTypeType"
    newSeriesType:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        notes:
          $ref: "#/components/schemas/nullableStringType"
        publisherId:
          $ref: "#/components/schemas/idType"
    seriesType:
      type: object
      nullable: true
      required:
        - id
        - name
      properties:
        id:
          $ref: "#/components/schemas/idType"
        name:
          type: string
        notes:
          $ref: "#/components/schemas/nullableStringType"
        publisherId:
          $ref: "#/components/schemas/nullableIdType"
        publisher:
          $ref: "#/components/schemas/publisherType"
        references:
          type: array
          items:
            $ref: "#/components/schemas/referenceType"
    newTagType:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        description:
          $ref: "#/components/schemas/nullableStringType"
        type:
          $ref: "#/components/schemas/nullableStringType"
    tagType:
      allOf:
        - type: object
          required:
            - id
          properties:
            id:
              $ref: "#/components/schemas/idType"
            referenceCount:
              $ref: "#/components/schemas/countType"
            references:
              type: array
              items:
                $ref: "#/components/schemas/referenceType"
        - $ref: "#/components/schemas/newTagType"
  responses:
    generalErrorResponse:
      description: An error has occurred
      content:
        "application/json":
          schema:
            type: object
            required:
              - error
            properties:
              error:
                $ref: "#/components/schemas/errorObjectType"
    generalError404Response:
      description: Not found
paths:
  "/authors":
    x-exegesis-controller: authorsController
    post:
      summary: Create a new author
      description: Create a new author. Optionally include aliases.
      operationId: createAuthor
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/newAuthorType"
      responses:
        "201":
          description: Author created
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/authorType"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Authors
    get:
      summary: Fetch all authors
      description: Fetch all authors as an array. Can return optional alias
        information, reference count, or references.
      operationId: getAllAuthors
      parameters:
        - $ref: "#/components/parameters/authorsAliasesParam"
        - $ref: "#/components/parameters/referencesParam"
        - $ref: "#/components/parameters/referenceCountParam"
      responses:
        "200":
          description: All authors
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/authorType"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Authors
        - References
  "/authors/{id}":
    x-exegesis-controller: authorsController
    parameters:
      - $ref: "#/components/parameters/idParam"
    get:
      summary: Fetch a single author by ID
      description: Retrieve a single author by ID. Returns author and
        optional alias information, reference count, or references.
      operationId: getAuthorById
      parameters:
        - $ref: "#/components/parameters/authorsAliasesParam"
        - $ref: "#/components/parameters/referencesParam"
        - $ref: "#/components/parameters/referenceCountParam"
      responses:
        "200":
          description: Author data
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/authorType"
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Authors
    delete:
      summary: Delete an author by ID
      description: Delete the specified author. Removes the author from
        associated reference records and removes any associated aliases. Does
        not delete any reference records.
      operationId: deleteAuthorById
      responses:
        "200":
          description: Author deleted
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Authors
        - References
  "/featuretags":
    x-exegesis-controller: featuretagsController
    post:
      summary: Create a new feature tag
      description: Create a new feature tag.
      operationId: createFeatureTag
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/newFeatureTagType"
      responses:
        "201":
          description: Feature tag created
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/featureTagType"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - FeatureTags
    get:
      summary: Fetch all feature tags
      description: Fetch feature tags as an array.
      operationId: getAllFeatureTags
      parameters:
        - $ref: "#/components/parameters/referencesParam"
        - $ref: "#/components/parameters/referenceCountParam"
      responses:
        "200":
          description: All feature tags
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/featureTagType"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - FeatureTags
        - MagazineFeatures
  "/featuretags/{id}":
    x-exegesis-controller: featuretagsController
    parameters:
      - $ref: "#/components/parameters/idParam"
    get:
      summary: Fetch a single feature tag by ID
      description: Retrieve a single feature tag by the ID. Includes full tag
        information.
      operationId: getFeatureTagById
      parameters:
        - $ref: "#/components/parameters/referencesParam"
        - $ref: "#/components/parameters/referenceCountParam"
      responses:
        "200":
          description: Feature tag data
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/featureTagType"
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Tags
    delete:
      summary: Delete a feature tag by ID
      description: Delete the specified feature tag. Removes all relational
        links between the tag and any references.
      operationId: deleteFeatureTagById
      responses:
        "200":
          description: Feature tag deleted
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Tags
        - MagazineFeatures
  "/magazines":
    x-exegesis-controller: magazinesController
    post:
      summary: Create a new magazine
      description: Create a new magazine.
      operationId: createMagazine
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/newMagazineType"
      responses:
        "201":
          description: Magazine created
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/magazineType"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Magazines
    get:
      summary: Fetch all magazines
      description: Fetch all magazines as an array.
      operationId: getAllMagazines
      parameters:
        - $ref: "#/components/parameters/magazineIssuesParam"
        - $ref: "#/components/parameters/magazineIssueCountParam"
      responses:
        "200":
          description: All magazines
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/magazineType"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Magazines
        - MagazineIssues
  # "/magazines/mostRecentlyUpdated":
  #   x-exegesis-controller: magazinesController
  #   get:
  #     summary: Fetch the most-recently-added-to magazines
  #     description: Fetch a number of magazines that have been most-recently
  #       added to.
  #     operationId: getMostRecentUpdatedMagazines
  #     parameters:
  #       - $ref: "#/components/parameters/countParam"
  #     responses:
  #       "200":
  #         description: Most-recently-added-to magazines in descending order
  #         content:
  #           "application/json":
  #             schema:
  #               type: array
  #               items:
  #                 $ref: "#/components/schemas/magazineType"
  #       default:
  #         $ref: "#/components/responses/generalErrorResponse"
  #     tags:
  #       - Magazines
  "/magazines/{id}":
    x-exegesis-controller: magazinesController
    parameters:
      - $ref: "#/components/parameters/idParam"
    get:
      summary: Fetch a single magazine by ID
      description: Retrieve a single magazine by the ID. Does not include issue
        information.
      operationId: getMagazineById
      parameters:
        - $ref: "#/components/parameters/magazineIssuesParam"
        - $ref: "#/components/parameters/magazineIssueCountParam"
      responses:
        "200":
          description: Magazine data
          content:
            "application/json":
              schema:
                type: object
                $ref: "#/components/schemas/magazineType"
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Magazines
        - MagazineIssues
    delete:
      summary: Delete a magazine by ID
      description: Delete a specific magazine by ID. Deletes all issues of the
        magazine and their references.
      operationId: deleteMagazineById
      responses:
        "200":
          description: Magazine deleted
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Magazines
  "/magazineissues":
    x-exegesis-controller: magazineissuesController
    post:
      summary: Create a new magazine issue
      description: Create a new magazine issue.
      operationId: createMagazineIssue
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/newMagazineIssueType"
      responses:
        "201":
          description: Magazine issue created
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/magazineIssueType"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Magazine Issues
  "/magazineissues/{id}":
    x-exegesis-controller: magazineissuesController
    parameters:
      - $ref: "#/components/parameters/idParam"
    get:
      summary: Get a full magazine issue
      description: Get a full magazine issue with magazine and reference
        information.
      operationId: getMagazineIssueById
      parameters:
        - $ref: "#/components/parameters/magazineIssueMagazineParam"
        - $ref: "#/components/parameters/referencesParam"
        - $ref: "#/components/parameters/referenceCountParam"
      responses:
        "200":
          description: Issue data
          content:
            "application/json":
              schema:
                type: object
                $ref: "#/components/schemas/magazineIssueType"
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Magazine Issues
        - Magazines
        - References
    delete:
      summary: Delete a magazine issue
      description: Delete a magazine issues. Deletes all references associated
        with it.
      operationId: deleteMagazineIssueById
      responses:
        "200":
          description: Magazine issue deleted
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Magazine Issues
  "/publishers":
    x-exegesis-controller: publishersController
    post:
      summary: Create a new publisher
      description: Create a new publisher.
      operationId: createPublisher
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/newPublisherType"
      responses:
        "201":
          description: Publisher created
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/publisherType"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Publishers
    get:
      summary: Fetch all publishers
      description: Fetch all publishers as an array. Includes publishers' data
        optionally with series information filled in.
      operationId: getAllPublishers
      parameters:
        - $ref: "#/components/parameters/publisherSeriesParam"
      responses:
        "200":
          description: All publishers
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/publisherType"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Publishers
        - Series
  "/publishers/{id}":
    x-exegesis-controller: publishersController
    parameters:
      - $ref: "#/components/parameters/idParam"
    get:
      summary: Fetch a single publisher by ID
      description: Retrieve a single publisher by the ID. Includes full
        publisher information.
      operationId: getPublisherById
      parameters:
        - $ref: "#/components/parameters/publisherSeriesParam"
      responses:
        "200":
          description: Publisher data
          content:
            "application/json":
              schema:
                type: object
                required:
                  - publisher
                properties:
                  publisher:
                    $ref: "#/components/schemas/publisherType"
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Publishers
        - Series
    delete:
      summary: Delete a publisher by ID
      description: Delete a specific publisher by ID.
      operationId: deletePublisherById
      responses:
        "200":
          description: Publisher deleted
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Publishers
  "/references":
    x-exegesis-controller: referencesController
    get:
      summary: Fetch all references
      description: Fetch all references as an array. Includes author, record
        type and sub-type information.
      operationId: getAllReferences
      responses:
        "200":
          description: All references
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/referenceType"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - References
        - Authors
  "/references/{id}":
    x-exegesis-controller: referencesController
    parameters:
      - $ref: "#/components/parameters/idParam"
    get:
      summary: Fetch a single reference by ID
      description: Retrieve a single reference by the ID. Includes author,
        record type and sub-type information.
      operationId: getReferenceById
      responses:
        "200":
          description: Reference data
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/referenceType"
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - References
        - Authors
    delete:
      summary: Delete a single reference by ID
      description: Delete a single reference by the ID. Removes any author
        associations, but does not affect any other related records.
      operationId: deleteReferenceById
      responses:
        "200":
          description: Reference deleted
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - References
  "/referencetypes":
    x-exegesis-controller: referencetypesController
    post:
      summary: Create a new reference type
      description: Create a new reference type.
      operationId: createReferenceType
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/newReferenceTypeType"
      responses:
        "201":
          description: Reference type created
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/referenceTypeType"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - ReferenceTypes
    get:
      summary: Fetch all reference types
      description: Fetch an array of all reference types.
      operationId: getAllReferenceTypes
      parameters:
        - $ref: "#/components/parameters/referenceCountParam"
      responses:
        "200":
          description: All reference type data
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/referenceTypeType"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - ReferenceTypes
  "/referencetypes/{id}":
    x-exegesis-controller: referencetypesController
    parameters:
      - $ref: "#/components/parameters/idParam"
    get:
      summary: Fetch a single reference type by ID
      description: Retrieve a single reference type by the ID. Includes full
        information.
      operationId: getReferenceTypeById
      parameters:
        - $ref: "#/components/parameters/referenceCountParam"
      responses:
        "200":
          description: Reference type data
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/referenceTypeType"
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Tags
  "/series":
    x-exegesis-controller: seriesController
    post:
      summary: Create a new series
      description: Create a new series.
      operationId: createSeries
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/newSeriesType"
      responses:
        "201":
          description: Series created
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/seriesType"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Series
    get:
      summary: Fetch all series
      description: Fetch all series as an array. Includes series data with
        publisher information filled in.
      operationId: getAllSeries
      parameters:
        - $ref: "#/components/parameters/seriesPublisherParam"
      responses:
        "200":
          description: All series
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/seriesType"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Series
        - Publishers
  "/series/{id}":
    x-exegesis-controller: seriesController
    parameters:
      - $ref: "#/components/parameters/idParam"
    get:
      summary: Fetch a single series by ID
      description: Retrieve a single series by the ID. Includes full series
        information.
      operationId: getSeriesById
      parameters:
        - $ref: "#/components/parameters/seriesPublisherParam"
      responses:
        "200":
          description: Series data
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/seriesType"
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Series
        - Publishers
    delete:
      summary: Delete a series by ID
      description: Delete a specific series by ID.
      operationId: deleteSeriesById
      responses:
        "200":
          description: Series deleted
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Series
  "/tags":
    x-exegesis-controller: tagsController
    post:
      summary: Create a new tag
      description: Create a new tag.
      operationId: createTag
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/newTagType"
      responses:
        "201":
          description: Tag created
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/tagType"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Tags
    get:
      summary: Fetch all tags
      description: Fetch tags as an array.
      operationId: getAllTags
      parameters:
        - $ref: "#/components/parameters/referencesParam"
        - $ref: "#/components/parameters/referenceCountParam"
      responses:
        "200":
          description: All tags
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tagType"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Tags
        - References
  "/tags/{id}":
    x-exegesis-controller: tagsController
    parameters:
      - $ref: "#/components/parameters/idParam"
    get:
      summary: Fetch a single tag by ID
      description: Retrieve a single tag by the ID. Includes full tag
        information.
      operationId: getTagById
      parameters:
        - $ref: "#/components/parameters/referencesParam"
        - $ref: "#/components/parameters/referenceCountParam"
      responses:
        "200":
          description: Tag data
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/tagType"
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Tags
    delete:
      summary: Delete a tag by ID
      description: Delete the specified tag. Removes all relational links
        between the tag and any references.
      operationId: deleteTagById
      responses:
        "200":
          description: Tag deleted
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Tags
        - References
