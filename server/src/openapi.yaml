openapi: 3.0.3
info:
  title: SMDB Server API
  version: "0.1.0"
servers:
  - url: /api
components:
  parameters:
    authorsAliasesParam:
      name: aliases
      in: query
      description: Boolean, whether to include aliases in an author query
      required: false
      schema:
        type: boolean
    referencesParam:
      name: references
      in: query
      description: Boolean, whether to include references in an author query
      required: false
      schema:
        type: boolean
    referenceCountParam:
      name: referenceCount
      in: query
      description: Boolean, whether to include reference count in author query
      required: false
      schema:
        type: boolean
    idParam:
      name: id
      in: path
      description: Entity ID
      required: true
      schema:
        $ref: "#/components/schemas/idType"
  schemas:
    idType:
      type: integer
      format: int64
      minimum: 1
    countType:
      type: integer
      format: int64
      minimum: 0
    dateTimeType:
      type: string
      format: date-time
    nullableStringType:
      type: string
      nullable: true
    authorNameOrAliasType:
      type: string
    newAuthorAliasType:
      type: object
      required:
        - name
      properties:
        name:
          $ref: "#/components/schemas/authorNameOrAliasType"
    authorAliasType:
      allOf:
        - $ref: "#/components/schemas/newAuthorAliasType"
        - type: object
          required:
            - id
          properties:
            id:
              $ref: "#/components/schemas/idType"
    newAuthorType:
      type: object
      required:
        - name
      properties:
        name:
          $ref: "#/components/schemas/authorNameOrAliasType"
        aliases:
          type: array
          items:
            $ref: "#/components/schemas/newAuthorAliasType"
    authorType:
      type: object
      required:
        - id
        - name
        - createdAt
        - updatedAt
      properties:
        id:
          $ref: "#/components/schemas/idType"
        name:
          $ref: "#/components/schemas/authorNameOrAliasType"
        createdAt:
          $ref: "#/components/schemas/dateTimeType"
        updatedAt:
          $ref: "#/components/schemas/dateTimeType"
        aliases:
          type: array
          items:
            $ref: "#/components/schemas/authorAliasType"
        referenceCount:
          $ref: "#/components/schemas/countType"
    errorObjectType:
      type: object
      required:
        - summary
        - description
      properties:
        code:
          $ref: "#/components/schemas/idType"
        summary:
          type: string
        description:
          type: string
        reference:
          type: string
    newFeatureTagType:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        description:
          $ref: "#/components/schemas/nullableStringType"
    featureTagType:
      allOf:
        - type: object
          required:
            - id
          properties:
            id:
              $ref: "#/components/schemas/idType"
            referenceCount:
              $ref: "#/components/schemas/countType"
        - $ref: "#/components/schemas/newFeatureTagType"
    referenceTypeType:
      type: object
      required:
        - id
        - name
        - description
        - notes
      properties:
        id:
          $ref: "#/components/schemas/idType"
        name:
          type: string
        description:
          type: string
        notes:
          $ref: "#/components/schemas/nullableStringType"
        referenceCount:
          $ref: "#/components/schemas/countType"
    newTagType:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        description:
          $ref: "#/components/schemas/nullableStringType"
        type:
          $ref: "#/components/schemas/nullableStringType"
    tagType:
      allOf:
        - type: object
          required:
            - id
          properties:
            id:
              $ref: "#/components/schemas/idType"
            referenceCount:
              $ref: "#/components/schemas/countType"
        - $ref: "#/components/schemas/newTagType"
  responses:
    generalErrorResponse:
      description: An error has occurred
      content:
        "application/json":
          schema:
            type: object
            required:
              - error
            properties:
              error:
                $ref: "#/components/schemas/errorObjectType"
    generalError404Response:
      description: Not found
paths:
  "/authors":
    x-exegesis-controller: authorsController
    get:
      summary: Fetch all authors
      description: Fetch all authors as an array. Can return optional alias
        information, reference count, or references.
      operationId: getAllAuthors
      parameters:
        - $ref: "#/components/parameters/authorsAliasesParam"
        - $ref: "#/components/parameters/referencesParam"
        - $ref: "#/components/parameters/referenceCountParam"
      responses:
        "200":
          description: All authors
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/authorType"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Authors
  "/authors/{id}":
    x-exegesis-controller: authorsController
    parameters:
      - $ref: "#/components/parameters/idParam"
    get:
      summary: Fetch a single author by ID
      description: Retrieve a single author by ID. Returns author and
        optional alias information, reference count, or references.
      operationId: getAuthorById
      parameters:
        - $ref: "#/components/parameters/authorsAliasesParam"
        - $ref: "#/components/parameters/referencesParam"
        - $ref: "#/components/parameters/referenceCountParam"
      responses:
        "200":
          description: Author data
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/authorType"
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Authors
    delete:
      summary: Delete an author by ID
      description: Delete the specified author. Removes the author from
        associated reference records and removes any associated aliases. Does
        not delete any reference records.
      operationId: deleteAuthorById
      responses:
        "200":
          description: Author deleted
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Authors
  "/tags":
    x-exegesis-controller: tagsController
    get:
      summary: Fetch all tags
      description: Fetch tags as an array.
      operationId: getAllTags
      parameters:
        - $ref: "#/components/parameters/referencesParam"
        - $ref: "#/components/parameters/referenceCountParam"
      responses:
        "200":
          description: All tags
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tagType"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Tags
  "/tags/{id}":
    x-exegesis-controller: tagsController
    parameters:
      - $ref: "#/components/parameters/idParam"
    get:
      summary: Fetch a single tag by ID
      description: Retrieve a single tag by the ID. Includes full tag
        information.
      operationId: getTagById
      parameters:
        - $ref: "#/components/parameters/referencesParam"
        - $ref: "#/components/parameters/referenceCountParam"
      responses:
        "200":
          description: Tag data
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/tagType"
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Tags
    delete:
      summary: Delete a tag by ID
      description: Delete the specified tag. Removes all relational links
        between the tag and any references.
      operationId: deleteTagById
      responses:
        "200":
          description: Tag deleted
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Tags
  "/featuretags":
    x-exegesis-controller: featuretagsController
    get:
      summary: Fetch all feature tags
      description: Fetch feature tags as an array.
      operationId: getAllFeatureTags
      parameters:
        - $ref: "#/components/parameters/referencesParam"
        - $ref: "#/components/parameters/referenceCountParam"
      responses:
        "200":
          description: All feature tags
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/featureTagType"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - FeatureTags
  "/featuretags/{id}":
    x-exegesis-controller: featuretagsController
    parameters:
      - $ref: "#/components/parameters/idParam"
    get:
      summary: Fetch a single feature tag by ID
      description: Retrieve a single feature tag by the ID. Includes full tag
        information.
      operationId: getFeatureTagById
      parameters:
        - $ref: "#/components/parameters/referencesParam"
        - $ref: "#/components/parameters/referenceCountParam"
      responses:
        "200":
          description: Feature tag data
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/featureTagType"
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Tags
    delete:
      summary: Delete a feature tag by ID
      description: Delete the specified feature tag. Removes all relational
        links between the tag and any references.
      operationId: deleteFeatureTagById
      responses:
        "200":
          description: Feature tag deleted
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Tags
  "/referencetypes":
    x-exegesis-controller: referencetypesController
    get:
      summary: Fetch all reference types
      description: Fetch an array of all reference types.
      operationId: getAllReferenceTypes
      parameters:
        - $ref: "#/components/parameters/referenceCountParam"
      responses:
        "200":
          description: All reference type data
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/referenceTypeType"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - ReferenceTypes
  "/referencetypes/{id}":
    x-exegesis-controller: referencetypesController
    parameters:
      - $ref: "#/components/parameters/idParam"
    get:
      summary: Fetch a single reference type by ID
      description: Retrieve a single reference type by the ID. Includes full
        information.
      operationId: getReferenceTypeById
      parameters:
        - $ref: "#/components/parameters/referenceCountParam"
      responses:
        "200":
          description: Reference type data
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/referenceTypeType"
        "404":
          $ref: "#/components/responses/generalError404Response"
        default:
          $ref: "#/components/responses/generalErrorResponse"
      tags:
        - Tags
